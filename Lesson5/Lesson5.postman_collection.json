{
	"info": {
		"_postman_id": "90be871b-a104-4a0b-8a2d-f10de796fc96",
		"name": "Lesson5",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18672544",
		"_collection_link": "https://solar-firefly-210861.postman.co/workspace/RobotDreamsHomework~4e1c7339-12a7-440a-a0b8-ea78f0d47382/collection/18672544-90be871b-a104-4a0b-8a2d-f10de796fc96?action=share&source=collection_link&creator=18672544"
	},
	"item": [
		{
			"name": "Lists",
			"item": [
				{
					"name": "Get Lists",
					"item": [
						{
							"name": "Create list 1",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.environment.set(\"list_1_name\", pm.response.json().name);\r",
											"pm.environment.set(\"list_1_id\", pm.response.json().id);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{auth}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "content-type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{$randomFileName}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}folder/{{folder_id}}/list",
									"host": [
										"{{url}}folder"
									],
									"path": [
										"{{folder_id}}",
										"list"
									]
								},
								"description": "Generated from cURL: curl --request POST \\\r\n     --url https://api.clickup.com/api/v2/folder//list \\\r\n     --header 'accept: application/json' \\\r\n     --header 'content-type: application/json'"
							},
							"response": []
						},
						{
							"name": "Create list 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.environment.set(\"list_2_name\", pm.response.json().name);\r",
											"pm.environment.set(\"list_2_id\", pm.response.json().id);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{auth}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "content-type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\" : \"{{$randomCountry}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.clickup.com/api/v2/folder/{{folder_id}}/list",
									"protocol": "https",
									"host": [
										"api",
										"clickup",
										"com"
									],
									"path": [
										"api",
										"v2",
										"folder",
										"{{folder_id}}",
										"list"
									]
								},
								"description": "Generated from cURL: curl --request POST \\\r\n     --url https://api.clickup.com/api/v2/folder//list \\\r\n     --header 'accept: application/json' \\\r\n     --header 'content-type: application/json'"
							},
							"response": []
						},
						{
							"name": "Get Lists with Schema check",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log('Text befor test')"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"let list_1_name = pm.environment.get(\"list_1_name\");\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(list_1_name);\r",
											"});\r",
											"\r",
											"let list_2_name = pm.environment.get(\"list_2_name\");\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(list_2_name);\r",
											"});\r",
											"\r",
											"const Ajv = require('ajv');\r",
											"const ajv = new Ajv();\r",
											"\r",
											"var schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"lists\": {\r",
											"      \"type\": \"array\",\r",
											"      \"items\": {\r",
											"        \"type\": \"object\",\r",
											"        \"properties\": {\r",
											"          \"id\": { \"type\": \"string\" },\r",
											"          \"name\": { \"type\": \"string\" },\r",
											"          \"orderindex\": { \"type\": \"number\" },\r",
											"          \"content\": { \"type\": \"string\" },\r",
											"          \"status\": { \"type\": [\"string\", \"null\"] },\r",
											"          \"priority\": { \"type\": [\"string\", \"null\"] },\r",
											"          \"assignee\": { \"type\": [\"string\", \"null\"] },\r",
											"          \"task_count\": { \"type\": \"number\" },\r",
											"          \"due_date\": { \"type\": [\"string\", \"null\"] },\r",
											"          \"start_date\": { \"type\": [\"string\", \"null\"] },\r",
											"          \"folder\": {\r",
											"            \"type\": \"object\",\r",
											"            \"properties\": {\r",
											"              \"id\": { \"type\": \"string\" },\r",
											"              \"name\": { \"type\": \"string\" },\r",
											"              \"hidden\": { \"type\": \"boolean\" },\r",
											"              \"access\": { \"type\": \"boolean\" }\r",
											"            },\r",
											"            \"required\": [\"id\", \"name\", \"hidden\", \"access\"]\r",
											"          },\r",
											"          \"space\": {\r",
											"            \"type\": \"object\",\r",
											"            \"properties\": {\r",
											"              \"id\": { \"type\": \"string\" },\r",
											"              \"name\": { \"type\": \"string\" },\r",
											"              \"access\": { \"type\": \"boolean\" }\r",
											"            },\r",
											"            \"required\": [\"id\", \"name\", \"access\"]\r",
											"          },\r",
											"          \"archived\": { \"type\": \"boolean\" },\r",
											"          \"override_statuses\": { \"type\": \"boolean\" },\r",
											"          \"permission_level\": { \"type\": \"string\" }\r",
											"        },\r",
											"        \"required\": [\r",
											"          \"id\", \"name\", \"orderindex\", \"content\", \"status\",\r",
											"          \"priority\", \"assignee\", \"task_count\", \"due_date\",\r",
											"          \"start_date\", \"folder\", \"space\", \"archived\",\r",
											"          \"override_statuses\", \"permission_level\"\r",
											"        ]\r",
											"      }\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\"lists\"]\r",
											"};\r",
											"\r",
											"const validate = ajv.compile(schema);\r",
											"const response = pm.response.json();\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema is valid', function () {\r",
											"    const valid = validate(response);\r",
											"    pm.expect(valid, JSON.stringify(validate.erors)).to.be.true;\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"response.lists.forEach((list) => {\r",
											"    console.log(`List ID for ${list.name} is ${list.id}`)\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "pk_88014761_E3G1BEV3E06IR1CCDKWKC3F5U9SXXRYG",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{url}}folder/{{folder_id}}/list",
									"host": [
										"{{url}}folder"
									],
									"path": [
										"{{folder_id}}",
										"list"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete List 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{auth}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}list/{{list_1_id}}",
									"host": [
										"{{url}}list"
									],
									"path": [
										"{{list_1_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete List 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{auth}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}list/{{list_2_id}}",
									"host": [
										"{{url}}list"
									],
									"path": [
										"{{list_2_id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get List",
					"item": [
						{
							"name": "Create list 1",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.environment.set(\"list_1_name\", pm.response.json().name);\r",
											"pm.environment.set(\"list_1_id\", pm.response.json().id);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{auth}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "content-type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{$randomFileName}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}folder/{{folder_id}}/list",
									"host": [
										"{{url}}folder"
									],
									"path": [
										"{{folder_id}}",
										"list"
									]
								},
								"description": "Generated from cURL: curl --request POST \\\r\n     --url https://api.clickup.com/api/v2/folder//list \\\r\n     --header 'accept: application/json' \\\r\n     --header 'content-type: application/json'"
							},
							"response": []
						},
						{
							"name": "Get List with Schema check",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let name = \"Test_\" + Math.floor(Math.random() * 10000);\r",
											"\r",
											"pm.sendRequest({\r",
											"    url: \"https://api.clickup.com/api/v2/folder/90156719140/list\",\r",
											"    method: \"POST\",\r",
											"    header: {\r",
											"        \"Authorization\": pm.globals.get(\"auth\"),\r",
											"        \"Content-Type\": \"application/json\"\r",
											"    },\r",
											"    body: {\r",
											"        mode: \"raw\",\r",
											"        raw: JSON.stringify({\r",
											"            name: name\r",
											"        })\r",
											"    }\r",
											"}, function (err, res) {\r",
											"    if (err) {\r",
											"        console.error(\"Request error:\", err);\r",
											"    } else {\r",
											"        console.log(\"Response:\", res.json());\r",
											"         pm.environment.set(\"createdListId\", res.json().id);\r",
											"    }\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"let list_1_name = pm.environment.get(\"list_1_name\");\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(list_1_name);\r",
											"});\r",
											"\r",
											"const Ajv = require('ajv');\r",
											"const ajv = new Ajv();\r",
											"\r",
											"var schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": { \"type\": \"string\" },\r",
											"    \"name\": { \"type\": \"string\" },\r",
											"    \"deleted\": { \"type\": \"boolean\" },\r",
											"    \"orderindex\": { \"type\": \"number\" },\r",
											"    \"content\": { \"type\": \"string\" },\r",
											"    \"priority\": { \"type\": [\"string\", \"null\"] },\r",
											"    \"assignee\": { \"type\": [\"string\", \"null\"] },\r",
											"    \"due_date\": { \"type\": [\"string\", \"null\"] },\r",
											"    \"start_date\": { \"type\": [\"string\", \"null\"] },\r",
											"    \"folder\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"id\": { \"type\": \"string\" },\r",
											"        \"name\": { \"type\": \"string\" },\r",
											"        \"hidden\": { \"type\": \"boolean\" },\r",
											"        \"access\": { \"type\": \"boolean\" }\r",
											"      },\r",
											"      \"required\": [\"id\", \"name\", \"hidden\", \"access\"]\r",
											"    },\r",
											"    \"space\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"id\": { \"type\": \"string\" },\r",
											"        \"name\": { \"type\": \"string\" },\r",
											"        \"access\": { \"type\": \"boolean\" }\r",
											"      },\r",
											"      \"required\": [\"id\", \"name\", \"access\"]\r",
											"    },\r",
											"    \"inbound_address\": { \"type\": \"string\" },\r",
											"    \"archived\": { \"type\": \"boolean\" },\r",
											"    \"override_statuses\": { \"type\": \"boolean\" },\r",
											"    \"statuses\": {\r",
											"      \"type\": \"array\",\r",
											"      \"items\": {\r",
											"        \"type\": \"object\",\r",
											"        \"properties\": {\r",
											"          \"id\": { \"type\": \"string\" },\r",
											"          \"status\": { \"type\": \"string\" },\r",
											"          \"orderindex\": { \"type\": \"number\" },\r",
											"          \"color\": { \"type\": \"string\" },\r",
											"          \"type\": { \"type\": \"string\" },\r",
											"          \"status_group\": { \"type\": \"string\" }\r",
											"        },\r",
											"        \"required\": [\"id\", \"status\", \"orderindex\", \"color\", \"type\", \"status_group\"]\r",
											"      }\r",
											"    },\r",
											"    \"permission_level\": { \"type\": \"string\" }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\", \"name\", \"deleted\", \"orderindex\", \"content\", \"priority\", \"assignee\",\r",
											"    \"due_date\", \"start_date\", \"folder\", \"space\", \"inbound_address\", \"archived\",\r",
											"    \"override_statuses\", \"statuses\", \"permission_level\"\r",
											"  ]\r",
											"};\r",
											"\r",
											"const validate = ajv.compile(schema);\r",
											"const response = pm.response.json();\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema is valid', function () {\r",
											"    const valid = validate(response);\r",
											"    pm.expect(valid, JSON.stringify(validate.erors)).to.be.true;\r",
											"});\r",
											"\r",
											"\r",
											"const curent_id = pm.environment.get(\"createdListId\");\r",
											"const url = \"https://api.clickup.com/api/v2/list/\" + curent_id;\r",
											"try {\r",
											"    \r",
											"    const response = await pm.sendRequest({\r",
											"        url: url,\r",
											"        method: \"DELETE\",\r",
											"        header: {\r",
											"            \"Authorization\": pm.globals.get(\"auth\")\r",
											"\r",
											"        }\r",
											"    });\r",
											"\r",
											"    console.log(response.json());\r",
											"} catch (err) {\r",
											"    console.error(err);\r",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "pk_88014761_E3G1BEV3E06IR1CCDKWKC3F5U9SXXRYG",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{url}}list/{{list_1_id}}",
									"host": [
										"{{url}}list"
									],
									"path": [
										"{{list_1_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete List 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{auth}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}list/{{list_1_id}}",
									"host": [
										"{{url}}list"
									],
									"path": [
										"{{list_1_id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Create List",
					"item": [
						{
							"name": "Create list with valid folder ID",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.environment.set(\"list_1_name\", pm.response.json().name);\r",
											"pm.environment.set(\"list_1_id\", pm.response.json().id);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{auth}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "content-type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{$randomFileName}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}folder/{{folder_id}}/list",
									"host": [
										"{{url}}folder"
									],
									"path": [
										"{{folder_id}}",
										"list"
									]
								},
								"description": "Generated from cURL: curl --request POST \\\r\n     --url https://api.clickup.com/api/v2/folder//list \\\r\n     --header 'accept: application/json' \\\r\n     --header 'content-type: application/json'"
							},
							"response": []
						},
						{
							"name": "Create list with invalid folder ID Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{auth}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "content-type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{$randomFileName}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}folder/{{$randomInt}}/list",
									"host": [
										"{{url}}folder"
									],
									"path": [
										"{{$randomInt}}",
										"list"
									]
								},
								"description": "Generated from cURL: curl --request POST \\\r\n     --url https://api.clickup.com/api/v2/folder//list \\\r\n     --header 'accept: application/json' \\\r\n     --header 'content-type: application/json'"
							},
							"response": []
						},
						{
							"name": "Create list with Empty name",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{auth}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "content-type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}folder/{{folder_id}}/list",
									"host": [
										"{{url}}folder"
									],
									"path": [
										"{{folder_id}}",
										"list"
									]
								},
								"description": "Generated from cURL: curl --request POST \\\r\n     --url https://api.clickup.com/api/v2/folder//list \\\r\n     --header 'accept: application/json' \\\r\n     --header 'content-type: application/json'"
							},
							"response": []
						},
						{
							"name": "Create list with invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{$randomInt}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "content-type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{$randomFileName}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}folder/{{folder_id}}/list",
									"host": [
										"{{url}}folder"
									],
									"path": [
										"{{folder_id}}",
										"list"
									]
								},
								"description": "Generated from cURL: curl --request POST \\\r\n     --url https://api.clickup.com/api/v2/folder//list \\\r\n     --header 'accept: application/json' \\\r\n     --header 'content-type: application/json'"
							},
							"response": []
						},
						{
							"name": "Delete List 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{auth}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}list/{{list_1_id}}",
									"host": [
										"{{url}}list"
									],
									"path": [
										"{{list_1_id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Update List",
					"item": [
						{
							"name": "Create list",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.environment.set(\"list_1_name\", pm.response.json().name);\r",
											"pm.environment.set(\"list_1_id\", pm.response.json().id);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{auth}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "content-type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{$randomFileName}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}folder/{{folder_id}}/list",
									"host": [
										"{{url}}folder"
									],
									"path": [
										"{{folder_id}}",
										"list"
									]
								},
								"description": "Generated from cURL: curl --request POST \\\r\n     --url https://api.clickup.com/api/v2/folder//list \\\r\n     --header 'accept: application/json' \\\r\n     --header 'content-type: application/json'"
							},
							"response": []
						},
						{
							"name": "Update list name with valid list ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.environment.set(\"list_1_name\", pm.response.json().name);\r",
											"pm.environment.set(\"list_1_id\", pm.response.json().id);\r",
											"\r",
											"let list_name = pm.environment.get(\"list_1_name\");\r",
											"\r",
											"pm.test(\"Name updated\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(list_name);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{auth}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{$randomFullName}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}list/{{list_1_id}}",
									"host": [
										"{{url}}list"
									],
									"path": [
										"{{list_1_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update list name with invalid list ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{auth}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{$randomFullName}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}list/{{$randomInt}}",
									"host": [
										"{{url}}list"
									],
									"path": [
										"{{$randomInt}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update list with empty name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{auth}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}list/{{list_1_id}}",
									"host": [
										"{{url}}list"
									],
									"path": [
										"{{list_1_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update list name with invalid token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{$randomInt}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{$randomFullName}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}list/{{list_1_id}}",
									"host": [
										"{{url}}list"
									],
									"path": [
										"{{list_1_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete List",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{auth}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}list/{{list_1_id}}",
									"host": [
										"{{url}}list"
									],
									"path": [
										"{{list_1_id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Delete List",
					"item": [
						{
							"name": "Create list",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.environment.set(\"list_1_name\", pm.response.json().name);\r",
											"pm.environment.set(\"list_1_id\", pm.response.json().id);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{auth}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "content-type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{$randomFileName}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}folder/{{folder_id}}/list",
									"host": [
										"{{url}}folder"
									],
									"path": [
										"{{folder_id}}",
										"list"
									]
								},
								"description": "Generated from cURL: curl --request POST \\\r\n     --url https://api.clickup.com/api/v2/folder//list \\\r\n     --header 'accept: application/json' \\\r\n     --header 'content-type: application/json'"
							},
							"response": []
						},
						{
							"name": "Delete List 1 with valid list ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{auth}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}list/{{list_1_id}}",
									"host": [
										"{{url}}list"
									],
									"path": [
										"{{list_1_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete List 1 with invalid list ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{auth}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}list/{{$randomInt}}",
									"host": [
										"{{url}}list"
									],
									"path": [
										"{{$randomInt}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete List 1 with invalid token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{$randomInt}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}list/{{list_1_id}}",
									"host": [
										"{{url}}list"
									],
									"path": [
										"{{list_1_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Deleted List",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log('Text befor test')"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"The list has Deleted status\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.deleted).to.eql(true);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "pk_88014761_E3G1BEV3E06IR1CCDKWKC3F5U9SXXRYG",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{url}}list/{{list_1_id}}",
									"host": [
										"{{url}}list"
									],
									"path": [
										"{{list_1_id}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	]
}